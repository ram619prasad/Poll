{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "http://localhost:3000",
  "resourcePath": "events",
  "apis": [
    {
      "path": "/api/v1/events/{id}/upvote.json",
      "operations": [
        {
          "summary": "For voting infavour of an event",
          "notes": "Api for upvoting an event",
          "responseMessages": [
            {
              "code": 200,
              "responseModel": null,
              "message": "Ok"
            },
            {
              "code": 400,
              "responseModel": null,
              "message": "Bad Request"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            }
          ],
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Event Id",
              "required": true
            }
          ],
          "nickname": "Api::V1::Events#upvote",
          "method": "put"
        }
      ]
    },
    {
      "path": "/api/v1/events/{id}/downvote.json",
      "operations": [
        {
          "summary": "For voting against an event",
          "notes": "Api for downvoting an event",
          "responseMessages": [
            {
              "code": 200,
              "responseModel": null,
              "message": "Ok"
            },
            {
              "code": 400,
              "responseModel": null,
              "message": "Bad Request"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            }
          ],
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Event Id",
              "required": true
            }
          ],
          "nickname": "Api::V1::Events#downvote",
          "method": "put"
        }
      ]
    },
    {
      "path": "/api/v1/events/timeline.json",
      "operations": [
        {
          "summary": "Fetches all Scheduled Events",
          "notes": "API for fetching all scheduled events",
          "responseMessages": [
            {
              "code": 200,
              "responseModel": null,
              "message": "Ok"
            },
            {
              "code": 400,
              "responseModel": null,
              "message": "Bad Request"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            }
          ],
          "parameters": [
            {
              "paramType": "query",
              "name": "page",
              "type": "integer",
              "description": "Page Number",
              "required": false
            },
            {
              "paramType": "query",
              "name": "per_page",
              "type": "integer",
              "description": "Per Page",
              "required": false
            }
          ],
          "nickname": "Api::V1::Events#timeline",
          "method": "get"
        }
      ]
    },
    {
      "path": "/api/v1/events.json",
      "operations": [
        {
          "summary": "Creates an event",
          "notes": "Api for creating an event",
          "responseMessages": [
            {
              "code": 200,
              "responseModel": null,
              "message": "Ok"
            },
            {
              "code": 400,
              "responseModel": null,
              "message": "Bad Request"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            }
          ],
          "parameters": [
            {
              "paramType": "form",
              "name": "event[title]",
              "type": "string",
              "description": "Title",
              "required": true
            },
            {
              "paramType": "form",
              "name": "event[description]",
              "type": "string",
              "description": "Description",
              "required": true
            },
            {
              "paramType": "form",
              "name": "event[location_id]",
              "type": "integer",
              "description": "Location",
              "required": true
            },
            {
              "paramType": "form",
              "name": "event[start_time]",
              "type": "string",
              "description": "Start Date & Time",
              "required": true
            },
            {
              "paramType": "form",
              "name": "event[end_time]",
              "type": "string",
              "description": "End Date & Time",
              "required": false
            },
            {
              "paramType": "form",
              "name": "event[performers]",
              "type": "string",
              "description": "Comma separated values of performers",
              "required": true
            },
            {
              "paramType": "form",
              "name": "event[category]",
              "type": "string",
              "description": "Category",
              "required": true,
              "allowableValues": {
                "valueType": "LIST",
                "values": [
                  "Quiz",
                  "Instrument",
                  "Dance",
                  "Singing",
                  "Yoga",
                  "Seminar",
                  "IndoorSports",
                  "Others"
                ]
              }
            }
          ],
          "nickname": "Api::V1::Events#create",
          "method": "post"
        }
      ]
    },
    {
      "path": "/api/v1/events/{id}.json",
      "operations": [
        {
          "summary": "Event Show",
          "notes": "Api for showing a specific event",
          "responseMessages": [
            {
              "code": 200,
              "responseModel": null,
              "message": "Ok"
            },
            {
              "code": 400,
              "responseModel": null,
              "message": "Bad Request"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            }
          ],
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Event Id",
              "required": true
            }
          ],
          "nickname": "Api::V1::Events#show",
          "method": "get"
        }
      ]
    },
    {
      "path": "/api/v1/events/{id}.json",
      "operations": [
        {
          "summary": "updates an event",
          "notes": "Api for updating an event",
          "responseMessages": [
            {
              "code": 200,
              "responseModel": null,
              "message": "Ok"
            },
            {
              "code": 400,
              "responseModel": null,
              "message": "Bad Request"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            }
          ],
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Event Id",
              "required": true
            },
            {
              "paramType": "form",
              "name": "event[title]",
              "type": "string",
              "description": "Title",
              "required": false
            },
            {
              "paramType": "form",
              "name": "event[description]",
              "type": "string",
              "description": "Description",
              "required": false
            },
            {
              "paramType": "form",
              "name": "event[location_id]",
              "type": "integer",
              "description": "Location",
              "required": false
            },
            {
              "paramType": "form",
              "name": "event[start_time]",
              "type": "string",
              "description": "Start Date & Time",
              "required": false
            },
            {
              "paramType": "form",
              "name": "event[end_time]",
              "type": "string",
              "description": "End Date & Time",
              "required": false
            },
            {
              "paramType": "form",
              "name": "event[performers]",
              "type": "string",
              "description": "Comma separated values of performers",
              "required": false
            },
            {
              "paramType": "form",
              "name": "event[category]",
              "type": "string",
              "description": "Category",
              "required": false,
              "allowableValues": {
                "valueType": "LIST",
                "values": [
                  "Others",
                  "Instrument",
                  "Dance",
                  "Singing",
                  "Yoga",
                  "Seminar",
                  "IndoorSports",
                  "Quiz"
                ]
              }
            }
          ],
          "nickname": "Api::V1::Events#update",
          "method": "patch"
        }
      ]
    },
    {
      "path": "/api/v1/events/{id}.json",
      "operations": [
        {
          "summary": "Event destroy",
          "notes": "Api for destroying a specific event",
          "responseMessages": [
            {
              "code": 200,
              "responseModel": null,
              "message": "Ok"
            },
            {
              "code": 400,
              "responseModel": null,
              "message": "Bad Request"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            }
          ],
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Event Id",
              "required": true
            }
          ],
          "nickname": "Api::V1::Events#destroy",
          "method": "delete"
        }
      ]
    }
  ],
  "authorizations": null
}